version: '3.8'

services:
  webapp:
    build: .
    container_name: smartwatch-webapp
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=1433
      - DB_NAME=smartwatch
      - DB_USER=sa
      - DB_PASSWORD=CZR#1*QZMpN0zx0b
    networks:
      - watchstore-network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: smartwatch-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=CZR#1*QZMpN0zx0b
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./scripts:/scripts
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "CZR#1*QZMpN0zx0b" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      bash -c '
        # Install sqlcmd tools
        curl https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc &&
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | tee /etc/apt/sources.list.d/mssql-release.list &&
        apt-get update &&
        ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev &&
        
        # Start SQL Server
        /opt/mssql/bin/sqlservr &
        
        # Wait for SQL Server to start
        sleep 30s &&
        
        # Create database
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "CZR#1*QZMpN0zx0b" -Q "
        IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = '\''smartwatch'\'')
        BEGIN
            CREATE DATABASE smartwatch;
        END" &&
        
        # Keep container running
        wait
      '
    networks:
      - watchstore-network

networks:
  watchstore-network:
    driver: bridge

volumes:
  sqlserver_data:
