/* * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template */package dal;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;/** * * @author an */public class DBContext {    protected Connection connection;    public DBContext() {        try {            String host = System.getenv("DB_HOST") != null ? System.getenv("DB_HOST") : "localhost";            String port = System.getenv("DB_PORT") != null ? System.getenv("DB_PORT") : "1433";            String dbName = System.getenv("DB_NAME") != null ? System.getenv("DB_NAME") : "smartwatch";            String username = System.getenv("DB_USER") != null ? System.getenv("DB_USER") : "sa";            String password = System.getenv("DB_PASSWORD");            // Log để debug            System.out.println("Database connection parameters:");            System.out.println("Host: " + host);            System.out.println("Port: " + port);            System.out.println("Database: " + dbName);            System.out.println("Username: " + username);            String url = String.format("jdbc:sqlserver://%s:%s;"                    + "databaseName=%s;"                    + "encrypt=true;"                    + "trustServerCertificate=true;"                    + "loginTimeout=30;",                    host, port, dbName);                        System.out.println("Connection URL: " + url);                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");            connection = DriverManager.getConnection(url, username, password);            System.out.println("Database connected successfully");        } catch (ClassNotFoundException | SQLException ex) {            System.out.println("Database Connection Creation Failed : " + ex.getMessage());            ex.printStackTrace();        }    }    public void closeConnection() {        try {            if (connection != null && !connection.isClosed()) {                connection.close();            }        } catch (SQLException ex) {            System.out.println("Error closing connection: " + ex.getMessage());        }    }    // Phương thức kiểm tra kết nối    public boolean testConnection() {        try {            if (connection != null && !connection.isClosed()) {                System.out.println("Database connection is active.");                return true;            }        } catch (SQLException ex) {            System.out.println("Error checking connection: " + ex.getMessage());        }        return false;    }}