/* * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template */package dal;import java.net.Socket;import java.sql.ResultSet;import java.sql.Statement;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;import java.util.Map;import java.util.Properties;/** * * @author an */public class DBContext {    protected Connection connection;    public DBContext() {        try {            // Debug: In ra tất cả các biến môi trường            System.out.println("=== All Environment Variables ===");            Map<String, String> env = System.getenv();            for (String envName : env.keySet()) {                System.out.format("%s=%s%n", envName, env.get(envName));            }            System.out.println("===============================");            // Lấy thông tin kết nối từ biến môi trường với giá trị mặc định            String host = getEnvOrDefault("DB_HOST", "db");            String port = getEnvOrDefault("DB_PORT", "1433");            String dbName = getEnvOrDefault("DB_NAME", "smartwatch");            String username = getEnvOrDefault("DB_USER", "sa");            String password = getEnvOrDefault("DB_PASSWORD", "CZR#1*QZMpN0zx0b");            // Debug: In ra các thông số kết nối            System.out.println("=== Database Connection Parameters ===");            System.out.println("Host: " + host);            System.out.println("Port: " + port);            System.out.println("Database: " + dbName);            System.out.println("Username: " + username);            System.out.println("====================================");            String url = String.format("jdbc:sqlserver://%s:%s;"                    + "databaseName=%s;"                    + "encrypt=true;"                    + "trustServerCertificate=true;"                    + "loginTimeout=30;",                    host, port, dbName);            System.out.println("Connection URL: " + url);            // Test network connectivity            try {                System.out.println("Testing network connectivity to " + host + ":" + port);                Socket socket = new Socket(host, Integer.parseInt(port));                System.out.println("Network connection successful!");                socket.close();            } catch (Exception e) {                System.out.println("Network connection failed: " + e.getMessage());            }            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");            connection = DriverManager.getConnection(url, username, password);            System.out.println("Database connected successfully");        } catch (ClassNotFoundException | SQLException ex) {            System.out.println("Database Connection Creation Failed : " + ex.getMessage());            ex.printStackTrace();        }    }    private String getEnvOrDefault(String key, String defaultValue) {        String value = System.getenv(key);        if (value == null || value.trim().isEmpty()) {            System.out.println("Warning: Environment variable " + key + " not found, using default value: " + defaultValue);            return defaultValue;        }        return value;    }    public void closeConnection() {        try {            if (connection != null && !connection.isClosed()) {                connection.close();                System.out.println("Database connection closed successfully");            }        } catch (SQLException ex) {            System.out.println("Error closing connection: " + ex.getMessage());        }    }    public boolean testConnection() {        try {            if (connection != null && !connection.isClosed()) {                try (Statement stmt = connection.createStatement()) {                    ResultSet rs = stmt.executeQuery("SELECT 1");                    if (rs.next()) {                        System.out.println("Database connection is active");                        return true;                    }                }            }        } catch (SQLException ex) {            System.out.println("Error testing connection: " + ex.getMessage());        }        return false;    }}