/* * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template */package dal;import java.sql.ResultSet;import java.sql.Statement;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;import java.util.Properties;/** * * @author an */public class DBContext {    protected Connection connection;    public DBContext() {        try {            String host = System.getenv("DB_HOST");            String port = System.getenv("DB_PORT");            String dbName = System.getenv("DB_NAME");            String username = System.getenv("DB_USER");            String password = System.getenv("DB_PASSWORD");            // Debug information            System.out.println("Database connection parameters:");            System.out.println("Host: " + host);            System.out.println("Port: " + port);            System.out.println("Database: " + dbName);            System.out.println("Username: " + username);            String url = String.format("jdbc:sqlserver://%s:%s;"                    + "databaseName=%s;"                    + "encrypt=true;"                    + "trustServerCertificate=true;"                    + "loginTimeout=30;"                    + "hostNameInCertificate=*.database.windows.net;",                    host, port, dbName);            System.out.println("Connection URL: " + url);            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");            // Add connection properties            Properties properties = new Properties();            properties.setProperty("user", username);            properties.setProperty("password", password);            properties.setProperty("trustServerCertificate", "true");            properties.setProperty("encrypt", "true");            connection = DriverManager.getConnection(url, properties);            System.out.println("Database connected successfully");            // Test the connection            try (Statement stmt = connection.createStatement()) {                ResultSet rs = stmt.executeQuery("SELECT 1");                if (rs.next()) {                    System.out.println("Connection test successful");                }            }        } catch (ClassNotFoundException | SQLException ex) {            System.out.println("Database Connection Creation Failed : " + ex.getMessage());            ex.printStackTrace();        }    }    public void closeConnection() {        try {            if (connection != null && !connection.isClosed()) {                connection.close();                System.out.println("Database connection closed successfully");            }        } catch (SQLException ex) {            System.out.println("Error closing connection: " + ex.getMessage());        }    }    public boolean testConnection() {        try {            if (connection != null && !connection.isClosed()) {                try (Statement stmt = connection.createStatement()) {                    ResultSet rs = stmt.executeQuery("SELECT 1");                    if (rs.next()) {                        System.out.println("Database connection is active");                        return true;                    }                }            }        } catch (SQLException ex) {            System.out.println("Error testing connection: " + ex.getMessage());        }        return false;    }}